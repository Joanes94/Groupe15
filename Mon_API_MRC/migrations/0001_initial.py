# Generated by Django 5.1.7 on 2025-04-01 16:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MaladieRenaleChronique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stade', models.FloatField(choices=[(1, 'Stade 1 (DFG ≥ 90)'), (2, 'Stade 2 (DFG 60-89)'), (3, 'Stade 3a (DFG 45-59)'), (3.5, 'Stade 3b (DFG 30-44)'), (4, 'Stade 4 (DFG 15-29)'), (5, 'Stade 5 (DFG < 15)')], default=1)),
                ('date_diagnostic', models.DateField()),
                ('etiologie', models.CharField(blank=True, max_length=200, null=True)),
                ('dialyse', models.BooleanField(default=False)),
                ('date_debut_dialyse', models.DateField(blank=True, null=True)),
                ('greffe', models.BooleanField(default=False)),
                ('date_greffe', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Maladie Rénale Chronique',
                'verbose_name_plural': 'Maladies Rénales Chroniques',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_dossier', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('A', 'Autre')], max_length=1)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(choices=[('ACTIF', 'Actif'), ('INACTIF', 'Inactif'), ('DECEDE', 'Décédé')], default='ACTIF', max_length=10)),
                ('date_enregistrement', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('stade_mrc_cible', models.FloatField(blank=True, choices=[(1, 'Stade 1 (DFG ≥ 90)'), (2, 'Stade 2 (DFG 60-89)'), (3, 'Stade 3a (DFG 45-59)'), (3.5, 'Stade 3b (DFG 30-44)'), (4, 'Stade 4 (DFG 15-29)'), (5, 'Stade 5 (DFG < 15)')], null=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Workflow',
                'verbose_name_plural': 'Workflows',
            },
        ),
        migrations.CreateModel(
            name='HistoriqueStadeMRC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stade', models.FloatField(choices=[(1, 'Stade 1 (DFG ≥ 90)'), (2, 'Stade 2 (DFG 60-89)'), (3, 'Stade 3a (DFG 45-59)'), (3.5, 'Stade 3b (DFG 30-44)'), (4, 'Stade 4 (DFG 15-29)'), (5, 'Stade 5 (DFG < 15)')])),
                ('date_evaluation', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
                ('maladie_renale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historique_stades', to='Mon_API_MRC.maladierenalechronique')),
            ],
            options={
                'verbose_name': 'Historique de Stade MRC',
                'verbose_name_plural': 'Historiques de Stades MRC',
                'ordering': ['-date_evaluation'],
            },
        ),
        migrations.CreateModel(
            name='ParametresCliniques',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_mesure', models.DateTimeField()),
                ('tension_arterielle_systolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(60), django.core.validators.MaxValueValidator(300)])),
                ('tension_arterielle_diastolique', models.IntegerField(validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)])),
                ('poids', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('taille', models.IntegerField(help_text='Taille en cm', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_cliniques', to='Mon_API_MRC.patient')),
            ],
            options={
                'verbose_name': 'Paramètres Cliniques',
                'verbose_name_plural': 'Paramètres Cliniques',
                'ordering': ['-date_mesure'],
            },
        ),
        migrations.CreateModel(
            name='ParametresBiologiques',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prelevement', models.DateField()),
                ('creatinine', models.DecimalField(blank=True, decimal_places=2, help_text='µmol/L', max_digits=6, null=True)),
                ('dfg', models.DecimalField(blank=True, decimal_places=2, help_text='mL/min/1.73m²', max_digits=5, null=True)),
                ('proteinurie', models.DecimalField(blank=True, decimal_places=2, help_text='g/24h', max_digits=6, null=True)),
                ('albuminurie', models.DecimalField(blank=True, decimal_places=2, help_text='mg/g', max_digits=6, null=True)),
                ('sodium', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=5, null=True)),
                ('potassium', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=4, null=True)),
                ('uree', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=5, null=True)),
                ('hemoglobine', models.DecimalField(blank=True, decimal_places=1, help_text='g/dL', max_digits=4, null=True)),
                ('calcium', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=4, null=True)),
                ('phosphore', models.DecimalField(blank=True, decimal_places=2, help_text='mmol/L', max_digits=4, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametres_biologiques', to='Mon_API_MRC.patient')),
            ],
            options={
                'verbose_name': 'Paramètres Biologiques',
                'verbose_name_plural': 'Paramètres Biologiques',
                'ordering': ['-date_prelevement'],
            },
        ),
        migrations.AddField(
            model_name='maladierenalechronique',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='maladie_renale', to='Mon_API_MRC.patient'),
        ),
        migrations.CreateModel(
            name='DossierMedical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('antecedents_medicaux', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('groupe_sanguin', models.CharField(blank=True, max_length=10, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dossier_medical', to='Mon_API_MRC.patient')),
            ],
            options={
                'verbose_name': 'Dossier Médical',
                'verbose_name_plural': 'Dossiers Médicaux',
            },
        ),
        migrations.CreateModel(
            name='ResultatExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_examen', models.CharField(choices=[('BIOLOGIE', 'Examen de biologie'), ('IMAGERIE', "Examen d'imagerie"), ('AUTRE', "Autre type d'examen")], max_length=15)),
                ('nom_examen', models.CharField(max_length=200)),
                ('date_examen', models.DateField()),
                ('resultats', models.TextField()),
                ('interpretation', models.TextField(blank=True, null=True)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='examens/')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultats_examens', to='Mon_API_MRC.patient')),
            ],
            options={
                'verbose_name': "Résultat d'Examen",
                'verbose_name_plural': "Résultats d'Examens",
                'ordering': ['-date_examen'],
            },
        ),
        migrations.CreateModel(
            name='Traitement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicament', models.CharField(max_length=200)),
                ('posologie', models.CharField(max_length=200)),
                ('frequence', models.CharField(max_length=100)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIF', 'En cours'), ('TERMINE', 'Terminé'), ('INTERROMPU', 'Interrompu')], default='ACTIF', max_length=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traitements', to='Mon_API_MRC.patient')),
            ],
            options={
                'verbose_name': 'Traitement',
                'verbose_name_plural': 'Traitements',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='EtapeWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordre', models.PositiveIntegerField()),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('type_action', models.CharField(choices=[('EXAMEN', 'Examen médical'), ('RENDEZ_VOUS', 'Rendez-vous'), ('TRAITEMENT', 'Traitement'), ('SURVEILLANCE', 'Surveillance'), ('EDUCATION', 'Éducation thérapeutique')], max_length=15)),
                ('periodicite', models.CharField(choices=[('UNIQUE', 'Une seule fois'), ('QUOTIDIEN', 'Quotidien'), ('HEBDOMADAIRE', 'Hebdomadaire'), ('MENSUEL', 'Mensuel'), ('TRIMESTRIEL', 'Trimestriel'), ('SEMESTRIEL', 'Semestriel'), ('ANNUEL', 'Annuel')], default='UNIQUE', max_length=15)),
                ('conditions_declenchement', models.TextField(blank=True, null=True)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etapes', to='Mon_API_MRC.workflow')),
            ],
            options={
                'verbose_name': 'Étape de Workflow',
                'verbose_name_plural': 'Étapes de Workflow',
                'ordering': ['workflow', 'ordre'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('MEDECIN', 'Médecin'), ('INFIRMIER', 'Infirmier'), ('ADMINISTRATEUR', 'Administrateur')], default='MEDECIN', max_length=15)),
                ('specialite', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='workflow',
            name='createur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflows_crees', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('EXAMEN', 'Examen médical'), ('DIALYSE', 'Séance de dialyse'), ('EDUCATION', 'Éducation thérapeutique'), ('AUTRE', 'Autre type de rendez-vous')], max_length=15)),
                ('date_heure', models.DateTimeField()),
                ('duree_minutes', models.PositiveIntegerField(default=30)),
                ('motif', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PLANIFIE', 'Planifié'), ('CONFIRME', 'Confirmé'), ('ANNULE', 'Annulé'), ('REALISE', 'Réalisé'), ('MANQUE', 'Non présenté')], default='PLANIFIE', max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rendez_vous', to='Mon_API_MRC.patient')),
                ('medecin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rendez_vous_programmes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['-date_heure'],
            },
        ),
        migrations.AddField(
            model_name='patient',
            name='medecin_referent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ALERTE', 'Alerte'), ('RAPPEL', 'Rappel'), ('INFO', 'Information')], max_length=10)),
                ('titre', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_envoi_prevue', models.DateTimeField()),
                ('date_lecture', models.DateTimeField(blank=True, null=True)),
                ('priorite', models.CharField(choices=[('HAUTE', 'Haute'), ('MOYENNE', 'Moyenne'), ('BASSE', 'Basse')], default='MOYENNE', max_length=10)),
                ('status', models.CharField(choices=[('ATTENTE', 'En attente'), ('ENVOYEE', 'Envoyée'), ('LUE', 'Lue')], default='ATTENTE', max_length=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='Mon_API_MRC.patient')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_recues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date_envoi_prevue', '-priorite'],
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=200)),
                ('entite', models.CharField(max_length=100)),
                ('identifiant_entite', models.CharField(max_length=100)),
                ('details', models.TextField(blank=True, null=True)),
                ('date_heure', models.DateTimeField(auto_now_add=True)),
                ('adresse_ip', models.GenericIPAddressField()),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions_journal', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Journal d'Audit",
                'verbose_name_plural': "Journal d'Audit",
                'ordering': ['-date_heure'],
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_heure', models.DateTimeField()),
                ('motif', models.CharField(max_length=200)),
                ('observations', models.TextField(blank=True, null=True)),
                ('prescriptions', models.TextField(blank=True, null=True)),
                ('recommandations', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='Mon_API_MRC.patient')),
                ('medecin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultations_effectuees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-date_heure'],
            },
        ),
    ]
